
package gp8_traveltogether.vistas;

import gp8_traveltogether.entidades.Paquete;
import gp8_traveltogether.entidades.Turista;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.format.DateTimeFormatter;
import javax.swing.table.DefaultTableModel;


public class vistaPresupuesto extends javax.swing.JInternalFrame {

    private Paquete paquete;
    private DefaultTableModel detallePresupuesto = new DefaultTableModel();
    
    public vistaPresupuesto(Paquete paquete) {
        this.paquete = paquete;
        initComponents();
        armarTablaPresupuesto();
        mostrarPresupuesto();
        
        System.out.println(paquete);
        System.out.println(paquete.getTuristas());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlTitulo = new javax.swing.JLabel();
        jbSiguiente = new javax.swing.JButton();
        jlIdaVuelta = new javax.swing.JLabel();
        jlFechas = new javax.swing.JLabel();
        jlGrupo = new javax.swing.JLabel();
        jlAdultos = new javax.swing.JLabel();
        jlMenores = new javax.swing.JLabel();
        jlPrecioAdulto = new javax.swing.JLabel();
        jlPrecioMenor = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPresupuesto = new javax.swing.JTable();
        jlTotal = new javax.swing.JLabel();

        jlTitulo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jlTitulo.setText("Presupuesto paquete:");

        jbSiguiente.setText("Cerrar");
        jbSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSiguienteActionPerformed(evt);
            }
        });

        jlIdaVuelta.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jlIdaVuelta.setText("Paquete:");

        jlFechas.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jlFechas.setText("Fechas:");

        jlGrupo.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jlGrupo.setText("Grupo: personas");

        jlAdultos.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jlAdultos.setText("Adultos:");

        jlMenores.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jlMenores.setText("Menores:");

        jlPrecioAdulto.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jlPrecioAdulto.setText("Precio adulto:");

        jlPrecioMenor.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jlPrecioMenor.setText("Precio menor:");

        tablaPresupuesto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaPresupuesto);

        jlTotal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jlTotal.setText("Total: $");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlTotal)
                .addGap(251, 251, 251)
                .addComponent(jbSiguiente)
                .addGap(46, 46, 46))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlGrupo)
                            .addComponent(jlPrecioAdulto)
                            .addComponent(jlIdaVuelta))
                        .addGap(76, 76, 76)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jlFechas)
                                    .addComponent(jlAdultos))
                                .addGap(62, 62, 62)
                                .addComponent(jlMenores))
                            .addComponent(jlPrecioMenor)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jlTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 663, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jlTitulo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlIdaVuelta)
                    .addComponent(jlFechas))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlGrupo)
                    .addComponent(jlAdultos)
                    .addComponent(jlMenores))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlPrecioAdulto)
                    .addComponent(jlPrecioMenor))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSiguiente)
                    .addComponent(jlTotal))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSiguienteActionPerformed
           dispose();
    }//GEN-LAST:event_jbSiguienteActionPerformed
    
    private void mostrarPresupuesto(){
        jlTitulo.setText("Presupuesto paquete NÂ°: "+paquete.getCodigoPaquete());
        jlIdaVuelta.setText(paquete.getBoleto().toString());
        DateTimeFormatter formatoNuestro = DateTimeFormatter.ofPattern("dd/MM/yy");
        jlFechas.setText("Fechas: "+ (paquete.getFechaInicio()).format(formatoNuestro) + " - " + (paquete.getFechaFin()).format(formatoNuestro));
        jlGrupo.setText("Grupo: "+paquete.getTuristas().size()+ " personas");
        
        int menores = 0;
        int adultos = 0;
        for (Turista turi:paquete.getTuristas()){
            if (turi.getEdad()<10){
                menores++;
            }else{
                adultos++;
            }
        }
        
        jlAdultos.setText("Adultos: "+adultos);
        jlMenores.setText("Menores: "+menores);
        
//        double precioMenores = 0.0;
//        double precioAdultos = 0.0;
//        for (Turista turi:paquete.getTuristas()){
//            if (turi.getEdad()<10){
//                precioMenores = paquete.costoMenor();
//            }else{
//                precioAdultos = paquete.costoAdulto();
//            }
//        }
//        jlPrecioAdulto.setText("Precio adulto: "+precioMenores+ " pesos");
//        jlPrecioMenor.setText("Precio menor: "+precioAdultos+ " pesos");
        llenarTablaPresupuesto();
        
        jlTotal.setText("Total $: "+ paquete.getMontoFinal());
        
        
    }
    
    public void llenarTablaPresupuesto(){
        detallePresupuesto.setRowCount(0);
        
        if (paquete.getTuristas() != null) {
        for (Turista turista : paquete.getTuristas()) {
            System.out.println(turista.getEdad());
            boolean esMenor = turista.getEdad() < 10;
            
            System.out.println(esMenor);
            
            double alojamiento = paquete.getCostoAlojamiento(esMenor);
            double pasaje = paquete.getCostoPasaje(esMenor);
            double pension = paquete.getCostoPension(esMenor);
            double traslado = paquete.getCostoTraslado(esMenor, alojamiento + pension + pasaje);
            double costoTotal = alojamiento + pension + pasaje + traslado;
            double temporada = paquete.getRecargoTemporada(costoTotal);

            
            Object[] fila = {
                turista.getNombre(),                // Nombre del turista
                alojamiento,                         // Costo de alojamiento
                pasaje,                             // Costo de pensiÃ³n
                pension,                              // Costo de pasaje
                traslado,                            // Costo de traslado
                temporada,
                costoTotal                           // Costo total (alojamiento + pensiÃ³n + pasaje + traslado)
            };

            
            detallePresupuesto.addRow(fila);
        }
    }
}
    
   
    public void armarTablaPresupuesto(){
        detallePresupuesto.addColumn("Nombre");
        detallePresupuesto.addColumn("Alojamiento");
        detallePresupuesto.addColumn("Pasaje");
        detallePresupuesto.addColumn("Pension");
        detallePresupuesto.addColumn("Traslados");
        detallePresupuesto.addColumn("Plus temporada");
        detallePresupuesto.addColumn("Total");
        
        tablaPresupuesto.setModel(detallePresupuesto);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbSiguiente;
    private javax.swing.JLabel jlAdultos;
    private javax.swing.JLabel jlFechas;
    private javax.swing.JLabel jlGrupo;
    private javax.swing.JLabel jlIdaVuelta;
    private javax.swing.JLabel jlMenores;
    private javax.swing.JLabel jlPrecioAdulto;
    private javax.swing.JLabel jlPrecioMenor;
    private javax.swing.JLabel jlTitulo;
    private javax.swing.JLabel jlTotal;
    private javax.swing.JTable tablaPresupuesto;
    // End of variables declaration//GEN-END:variables
}
