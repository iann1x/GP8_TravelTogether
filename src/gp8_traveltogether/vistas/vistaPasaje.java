
package gp8_traveltogether.vistas;

import gp8_traveltogether.entidades.Ciudad;
import gp8_traveltogether.entidades.Pasaje;
import gp8_traveltogether.persistencia.CiudadData;
import gp8_traveltogether.persistencia.PasajeData;
import java.util.ArrayList;
import javax.swing.JOptionPane;

public class vistaPasaje extends javax.swing.JInternalFrame {

    private ArrayList <Ciudad> ciudades = new ArrayList <>();
    private CiudadData ciudadData = new CiudadData();
    
    private PasajeData pData = new PasajeData();
    private Pasaje pasajeActual = null;
    
    
    public vistaPasaje() {
        initComponents();
        
        ciudades = ciudadData.mostrarCiudades();
        cargarOrigen();
        cargarDestino();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbNuevo = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jbGuardar = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jtCodigo = new javax.swing.JTextField();
        jtPrecio = new javax.swing.JTextField();
        jbBuscar = new javax.swing.JButton();
        jcOrigen = new javax.swing.JComboBox<>();
        jcDestino = new javax.swing.JComboBox<>();
        jcTipo = new javax.swing.JComboBox<>();
        jrEstado = new javax.swing.JRadioButton();
        bg = new javax.swing.JLabel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jbNuevo.setText("Nuevo");
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });
        getContentPane().add(jbNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 420, -1, -1));

        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(jbEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 420, -1, -1));

        jbGuardar.setText("Guardar");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(jbGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 420, -1, -1));

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });
        getContentPane().add(jbSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 420, -1, -1));
        getContentPane().add(jtCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 140, 70, -1));

        jtPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtPrecioActionPerformed(evt);
            }
        });
        getContentPane().add(jtPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 280, 149, -1));

        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(jbBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(322, 140, 70, -1));

        getContentPane().add(jcOrigen, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 190, 149, -1));

        getContentPane().add(jcDestino, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, 149, -1));

        jcTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Avion", "Colectivo" }));
        getContentPane().add(jcTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 330, 149, -1));

        jrEstado.setText("Disponible");
        getContentPane().add(jrEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 370, -1, -1));

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/pasajes.png"))); // NOI18N
        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        // TODO add your handling code here:
        try{
            Ciudad origen = (Ciudad) jcOrigen.getSelectedItem();
            Ciudad destino = (Ciudad) jcDestino.getSelectedItem();
            Double precio = Double.parseDouble(jtPrecio.getText());
            String tipo = (String) jcTipo.getSelectedItem();
            
            if((jcOrigen.getSelectedItem() == null)|| (jcDestino.getSelectedItem() == null) || (jcTipo.getSelectedItem() == null)){
                JOptionPane.showMessageDialog(null, "No puede haber campos vacíos.");
                return;
            }
            
            if (origen.getCodCiudad() == destino.getCodCiudad()){
                    JOptionPane.showMessageDialog(this,"Las ciudades de origen y destino no pueden ser iguales.");
                    return;
            }
            
            Boolean estado = jrEstado.isSelected();
            
            if(pasajeActual ==null){
                pasajeActual = new Pasaje (origen, destino, precio, tipo, estado);
                pData.agregarPasaje(pasajeActual);
            } else {
                pasajeActual.setOrigen(origen);
                pasajeActual.setDestino(destino);
                pasajeActual.setPrecioPasaje(precio);
                pasajeActual.setTipoViaje(tipo);
                pasajeActual.setEstado(true);
                pData.modificarPasaje(pasajeActual);
            }
            
        }catch(NumberFormatException nfe){
            JOptionPane.showMessageDialog(this,"Ingrese un precio válido."); 
        }
    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        // TODO add your handling code here:
        limpiarCampos();
        pasajeActual = null;
    }//GEN-LAST:event_jbNuevoActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        // TODO add your handling code here:
        try{
            if (jtCodigo.getText().isEmpty()){
                JOptionPane.showMessageDialog(this,"Error. Ingrese un numero válido.");
                return;
            }
            
            Integer cod = Integer.parseInt(jtCodigo.getText());
            pasajeActual = pData.buscarPasaje(cod);
            
            if (pasajeActual !=null){
                
                Ciudad origen = pasajeActual.getOrigen();
                    for (int i = 0; i < jcOrigen.getItemCount(); i++) {
                        Ciudad ciudad = (Ciudad) jcOrigen.getItemAt(i);
                        if (ciudad.getCodCiudad() == origen.getCodCiudad()) {
                            jcOrigen.setSelectedIndex(i);
                            break;
                        }
                    }
                      
                Ciudad destino = pasajeActual.getDestino();
                    for (int i = 0; i < jcDestino.getItemCount(); i++) {
                    Ciudad ciudad = (Ciudad) jcDestino.getItemAt(i);
                    if (ciudad.equals(destino)) {
                    jcDestino.setSelectedIndex(i);
                    break;
                    }
                }

                jtPrecio.setText(String.valueOf(pasajeActual.getPrecioPasaje()));
                jcTipo.setSelectedItem(pasajeActual.getTipoViaje());
                jrEstado.setSelected(pasajeActual.isEstado()); 
            }else {
                 JOptionPane.showMessageDialog(this,"No existe un pasaje con ese código.");
            }
        } catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Número no válido.");
        }
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        // TODO add your handling code here:
        if( pasajeActual != null){
            pData.bajaLogica(pasajeActual.getCodPasaje());
            pasajeActual = null;
            limpiarCampos();
        }
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jtPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtPrecioActionPerformed

    private void cargarOrigen(){
        jcOrigen.removeAllItems();
        jcOrigen.addItem(new Ciudad(0, "Seleccione", false));
        for (Ciudad c: ciudades){
            jcOrigen.addItem(c);
        }
    }
    
    public void cargarDestino(){
        jcDestino.removeAllItems();
        jcDestino.addItem(new Ciudad(0, "Seleccione", false));
        for (Ciudad c: ciudades){
            jcDestino.addItem(c);
        }  
    }
    
    private void limpiarCampos(){
        jtCodigo.setText("");
        jcOrigen.setSelectedIndex(0);
        jcDestino.setSelectedIndex(0);
        jtPrecio.setText("");
        jcTipo.setSelectedItem("Seleccione");
        jrEstado.setSelected(false);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bg;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<Ciudad> jcDestino;
    private javax.swing.JComboBox<Ciudad> jcOrigen;
    private javax.swing.JComboBox<String> jcTipo;
    private javax.swing.JRadioButton jrEstado;
    private javax.swing.JTextField jtCodigo;
    private javax.swing.JTextField jtPrecio;
    // End of variables declaration//GEN-END:variables
}
